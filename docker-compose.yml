version: '3'

networks:
  web:
    external: true

services:
  katsumori:
    build:
      context: ./dockerfiles
      dockerfile: nginxunit.dockerfile
      args:
        - UID=${_UID:-1000}
        - GID=${GID:-1000}
    container_name: nginx
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ./src:/var/www/html:delegated
      - ./dockerfiles/configs/nginxunit/:/docker-entrypoint.d/
#      - ./dockerfiles/logs/unit.log:/var/log/unit.log
    depends_on:
      - redis
      - mysql
      - schedule
      - elasticsearch
    labels:
      - traefik.backend=katsumori.katsumori-backend.katsumori.fun
      - raefik.frontend.rule=Host:dev.katsumori.fun
      - traefik.frontend.rule=Host:dev.katsumori.fun
      - traefik.docker.network=web
      - traefik.port=8081
    networks:
      - web

  mysql:
    image: mariadb:10.8.2-rc-focal
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: katsumori
      MYSQL_USER: ${MYSQL_USER:-Laravel}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    labels:
      - traefik.enable=false
    networks:
      - web

  elasticsearch:
    image: elasticsearch:8.4.3
    volumes:
      - ./dockerfiles/configs/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xms1512m -Xmx1512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-password} # Password for the 'elastic' user
      discovery.type: single-node
    labels:
      - traefik.enable=false
    networks:
      - web

  mysql_testing:
    image: mariadb:10.8.2-rc-focal
    container_name: mysql_testing
    restart: unless-stopped
    tty: true
    ports:
      - 3307:3307
    environment:
      MYSQL_DATABASE: yukidub_testing
      MYSQL_USER: testing
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_TCP_PORT: 3307
    labels:
      - traefik.enable=false
    networks:
      - web

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    labels:
      - traefik.enable=false
    networks:
      - web

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${_UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    labels:
      - traefik.enable=false
    networks:
      - web

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    ports:
      - 3001:3000
      - 3002:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    labels:
      - traefik.enable=false
    networks:
      - web

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: nginxunit.dockerfile
      args:
        - UID=${_UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    labels:
      - traefik.enable=false
    networks:
      - web

  schedule:
    build:
      context: ./dockerfiles
      dockerfile: nginxunit.dockerfile
      args:
        - UID=${_UID:-1000}
        - GID=${GID:-1000}
    restart: always
    command: php artisan schedule:work
    volumes:
      - ./src:/var/www/html:delegated
    labels:
      - traefik.enable=false
    networks:
      - web

  work:
    build:
      context: ./dockerfiles
      dockerfile: nginxunit.dockerfile
      args:
        - UID=${_UID:-1000}
        - GID=${GID:-1000}
    restart: always
    command: php artisan queue:work --queue=high,default
    volumes:
      - ./src:/var/www/html:delegated
    labels:
      - traefik.enable=false
    networks:
      - web

volumes:
  elasticsearch: