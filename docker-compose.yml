# Docker-compose file is used only for local development. This is not production-ready example.

version: '3.8'

networks:
  web:
    external: true

volumes:
  mysql-data: {}
  redis-data: {}
  tmp-data: {}
  elastic-data: {}

services:
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
    user: "${APP_UID:-10001}:${APP_GID:-10001}"
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@\h] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
      APP_DEBUG: 'true'
      APP_ENV: local
      REDIS_HOST: redis
      REDIS_PASSWORD: redis_password
      DB_HOST: mysql
      DB_CONNECTION: mysql
      DB_DATABASE: forge
      DB_USERNAME: forge
      DB_PASSWORD: forge
      ELASTICSEARCH_ENABLED: true
      ELASTICSEARCH_HOSTS: elasticsearch:9200
      ELASTICSEARCH_SCHEME: http
      ELASTICSEARCH_USER: elastic
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - tmp-data:/tmp:rw
      - .:/app:rw
    depends_on:
      mysql: {condition: service_healthy}
      redis: {condition: service_healthy}
      elasticsearch: {condition: service_healthy}
    networks:
      - web

  web:
    <<: *app
    command: rr serve -c .rr.local.yaml
    ports:
      - '8080:8080/tcp'
      - '8443:8443/tcp'
    healthcheck:
      test: ['CMD-SHELL', 'wget --spider -q "http://127.0.0.1:8082/health?plugin=http&plugin=rpc"']
      interval: 2s
      timeout: 2s
    networks:
      - web

  queue:
    <<: *app
    command: php /app/artisan queue:work --memory=256 --sleep=1

  cron:
    <<: *app
    command: supercronic /etc/supercronic/laravel # it runs artisan schedule:run

  mysql:
    image: mariadb:10.8.2-rc-focal # Image page: <https://hub.docker.com/_/mariadb>
    tty: true
    environment:
      MYSQL_DATABASE: forge
      MYSQL_USER: forge
      MYSQL_PASSWORD: forge
      MYSQL_ROOT_PASSWORD: forge
    ports:
      - '3306:3306'
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck: # Healthcheck docs: <https://docs.docker.com/engine/reference/builder/#healthcheck>
      test: ["CMD", 'mysqladmin', 'ping', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      interval: 25s
      timeout: 15s
      start_period: 10s
    networks:
      - web

  redis:
    image: redis:7-alpine # Image page: <https://hub.docker.com/_/redis>
    command: redis-server --requirepass redis_password
    volumes:
      - redis-data:/data:rw
    ports:
      - '6379/tcp'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 500ms
      timeout: 1s
    networks:
      - web

  elasticsearch:
    image: elasticsearch:8.4.3 # Image page: <https://registry.hub.docker.com/_/elasticsearch>
    volumes:
      - elastic-data:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xms1512m -Xmx1512m
      ELASTIC_PASSWORD: forge # Password for the 'elastic' user
      discovery.type: single-node
      xpack.license.self_generated.type: trial
      xpack.security.enabled: false
      cluster.name: "docker-cluster"
      network.host: 0.0.0.0
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - web
